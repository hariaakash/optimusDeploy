version: '3.5'

networks:

    proxy:
        name: proxy
        driver: overlay
    apps:
        name: apps
        driver: overlay
    micros:
        name: micros
        driver: overlay
    db:
        name: db
        driver: overlay

services:

    mongodb:
        image: mvertes/alpine-mongo
        volumes:
            - ./data/mongodb:/data/db
        networks:
            - db
        deploy:
            placement:
                constraints: [node.role == manager]
    
    rabbitmq:
        image: rabbitmq:3-management
        hostname: rabbitmq  #The hostname has to be manually specified. Refer to hub.docker.com/_/rabbitmq
        volumes:
            - ./data/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@rabbitmq
        environment:
            - RABBITMQ_DEFAULT_USER=user 
            - RABBITMQ_DEFAULT_PASS=password
        networks:
            - micros
            - proxy
        deploy:
            labels:
                - "traefik.docker.network=proxy"
                - "traefik.backend=rabbitmq"
                - "traefik.frontend.rule=Host:www.rabbitmq.local,rabbitmq.local"
                - "traefik.port=15672"
                - "traefik.enable=true"
            placement:
                constraints: [node.role == manager]

    registry:
        image: registry:2
        volumes:
            - ./data/registry:/var/lib/registry
        networks:
            - micros
            - proxy
        deploy:
            labels:
                - "traefik.frontend.rule=Host:www.registry.local,registry.local"
                - "traefik.port=5000"
                - "traefik.enable=true"
            placement:
                constraints: [node.role == manager]
    
    visualizer:
        image: dockersamples/visualizer:stable
        ports:
            - "4000:8080"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        deploy:
            labels:
                - "traefik.backend=visualizer"
                - "traefik.frontend.rule=Host:visual.local"
                - "traefik.port=8080"
                - "traefik.enable=true"
            placement:
                constraints: [node.role == manager]
        networks:
            - proxy
    
    traefik:
        image: traefik
        command: --api --docker
        ports:
            - 80:80
            - 443:443
            - 8080:8080
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./logs/traefik/access.json:/var/log/traefik/access.log.json
        configs:
            -   source: traefik_config
                target: /etc/traefik/traefik.toml
            -   source: traefik_crt
                target: /etc/traefik/traefik.crt
            -   source: traefik_key
                target: /etc/traefik/traefik.key
        networks:
            - proxy
            - apps
            - micros
        deploy:
            labels:
                - "traefik.backend=traefik"
                - "traefik.frontend.rule=Host:www.traefik.local,traefik.local"
                - "traefik.port=8080"
                - "traefik.enable=true"
            placement:
                constraints: [node.role == manager]

configs:

    traefik_config:
        file: ./config/traefik/traefik-dev.toml
    traefik_crt:
        file: ./config/traefik/traefik.crt
    traefik_key:
        file: ./config/traefik/traefik.key