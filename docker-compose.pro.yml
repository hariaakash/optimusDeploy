version: '3.5'

networks:

    proxy:
        name: proxy
    apps:
        name: apps
    micros:
        name: micros
    db:
        name: db

services:

    api:
        build: ./services/api
        image: optimusdeploy_api:pro
        command: npm run start
        environment:
            NODE_ENV: production
            AMQP_URI: amqp://rabbitmq
            API_PORT: 3000
        volumes:
            - ./services/api/src:/app/src
        labels:
            - "traefik.docker.network=proxy"
            - "traefik.backend=api.local"
            - "traefik.frontend.rule=Host:api.local"
            - "traefik.port=3000"
            - "traefik.enable=true"
        networks:
            - micros
            - proxy

    orchestrator:
        build: ./services/orchestrator
        image: optimusdeploy_orchestrator:pro
        command: npm run start
        environment:
            NODE_ENV: production
            AMQP_URI: amqp://rabbitmq
        volumes:
            - ./services/orchestrator/src:/app/src
        depends_on:
            - rabbitmq
        networks:
            - micros

    user:
        build: ./services/user
        image: optimusdeploy_user:pro
        command: npm run start
        environment:
            NODE_ENV: production
            AMQP_URI: amqp://rabbitmq
            MONGODB_HOST: mongodb://mongodb
        volumes:
            - ./services/user/src:/app/src
        depends_on:
            - rabbitmq
            - mongodb
        networks:
            - micros
            - db
    
    container:
        build: ./services/container
        image: optimusdeploy_container:pro
        command: npm run start
        environment:
            NODE_ENV: production
            AMQP_URI: amqp://rabbitmq
            MONGODB_HOST: mongodb://mongodb
        volumes:
            - ./services/container/src:/app/src
        depends_on:
            - rabbitmq
            - mongodb
        networks:
            - micros
            - db

    mailer:
        build: ./services/mailer
        image: optimusdeploy_mailer:pro
        command: npm run start
        environment:
            NODE_ENV: production
            AMQP_URI: amqp://rabbitmq
            SENDGRID_API_KEY: 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
        volumes:
            - ./services/mailer/src:/app/src
        depends_on:
            - rabbitmq
        networks:
            - micros

    mongodb:
        image: mvertes/alpine-mongo
        volumes:
            - ./data/mongodb:/data/db
        networks:
            - db

    rabbitmq:
        image: rabbitmq:3.7-alpine
        hostname: rabbitmq
        volumes:
            - ./data/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@rabbitmq
        networks:
            - micros

    registry:
        image: registry:2
        ports:
            - 5000:5000
        volumes:
            - ./config/traefik:/certs
        environment:
            REGISTRY_HTTP_TLS_CERTIFICATE: /certs/traefik.crt
            REGISTRY_HTTP_TLS_KEY: /certs/traefik.key
        networks:
            - micros

    traefik:
        image: traefik
        ports:
            - 80:80
            - 443:443
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./config/traefik/traefik-pro.toml:/etc/traefik/traefik.toml
            - ./data/traefik/acme.json:/acme.json
        networks:
            - proxy