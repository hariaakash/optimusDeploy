version: '3.5'

networks:

    proxy:
        name: proxy
        driver: overlay
        external: true
    apps:
        name: apps
        driver: overlay
        external: true
    micros:
        name: micros
        driver: overlay
        external: true
    db:
        name: db
        driver: overlay
        external: true

services:

    api:
        build:
            context: ./services/api
            args:
                NODE_ENV: development
        image: optimusdeploy_api:dev
        command: npm run dev
        environment:
            NODE_ENV: development
            AMQP_URI: amqp://rabbitmq
            API_PORT: 3000
            ELASTIC_APM_SERVICE_NAME: optimus-deploy-api
            ELASTIC_APM_SERVER_URL: http://apm-server:8200
        volumes:
            - ./services/api/src:/app/src
        labels:
            - "traefik.docker.network=proxy"
            - "traefik.backend=api.local"
            - "traefik.frontend.rule=Host:api.local"
            - "traefik.port=3000"
            - "traefik.enable=true"
        networks:
            - micros
            - proxy

    orchestrator:
        build:
            context: ./services/orchestrator
            args:
                NODE_ENV: development
        image: optimusdeploy_orchestrator:dev
        command: npm run dev
        environment:
            NODE_ENV: development
            AMQP_URI: amqp://rabbitmq
        volumes:
            - ./services/orchestrator/src:/app/src
        depends_on:
            - rabbitmq
        networks:
            - micros

    user:
        build:
            context: ./services/user
            args:
                NODE_ENV: development
        image: optimusdeploy_user:dev
        command: npm run dev
        environment:
            NODE_ENV: development
            AMQP_URI: amqp://rabbitmq
            MONGODB_HOST: mongodb://mongodb
        volumes:
            - ./services/user/src:/app/src
        depends_on:
            - rabbitmq
            - mongodb
        networks:
            - micros
            - db

    container:
        build:
            context: ./services/container
            args:
                NODE_ENV: development
        image: optimusdeploy_container:dev
        command: npm run dev
        environment:
            NODE_ENV: development
            AMQP_URI: amqp://rabbitmq
            MONGODB_HOST: mongodb://mongodb
            DATA_DIR: /srv/daemon-data
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./services/container/src:/app/src
            - /srv/daemon-data:/srv/daemon-data
        depends_on:
            - rabbitmq
            - mongodb
        networks:
            - micros
            - db
            
    mailer:
        build:
            context: ./services/mailer
            args:
                NODE_ENV: development
        image: optimusdeploy_mailer:dev
        command: npm run dev
        environment:
            NODE_ENV: development
            AMQP_URI: amqp://rabbitmq
            SENDGRID_API_KEY: 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
        volumes:
            - ./services/mailer/src:/app/src
        depends_on:
            - rabbitmq
        networks:
            - micros

    mongodb:
        image: mvertes/alpine-mongo
        volumes:
            - ./data/mongodb:/data/db
        networks:
            - db
    
    rabbitmq:
        image: rabbitmq:3-management
        hostname: rabbitmq  #The hostname has to be manually specified. Refer to hub.docker.com/_/rabbitmq
        volumes:
            - ./data/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@rabbitmq
        labels:
            - "traefik.docker.network=proxy"
            - "traefik.backend=rabbitmq.local"
            - "traefik.frontend.rule=Host:rabbitmq.local"
            - "traefik.port=15672"
            - "traefik.enable=true"
        networks:
            - micros
            - proxy

    traefik:
        image: traefik
        ports:
            - 80:80
            - 443:443
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./config/traefik/traefik-dev.compose.toml:/etc/traefik/traefik.toml
            - ./config/traefik/traefik.crt:/etc/traefik/traefik.crt
            - ./config/traefik/traefik.key:/etc/traefik/traefik.key
        labels:
            - "traefik.backend=traefik.local"
            - "traefik.frontend.rule=Host:traefik.local"
            - "traefik.port=8080"
            - "traefik.enable=true"
        networks:
            - proxy